Кэширование
=======

Кэширование - простой и эффективный способ улучшения производительности веб-приложения.
Сохраняя относительно статичные данные в кэше и используя эти данные из кэша когда потребуется,
мы экономим время генерации данных.

Использование кэша в Yii - это, главным образом, конфигурирование и вызов компонента кэша.
Ниже показана конфигурация, определяющая кэширующий компонент, использующий
memcache с двумя кэш-серверами.

~~~
[php]
array(
	......
	'components'=>array(
		......
		'cache'=>array(
			'class'=>'system.caching.CMemCache',
			'servers'=>array(
				array('host'=>'server1', 'port'=>11211, 'weigth'=>60),
				array('host'=>'server2', 'port'=>11211, 'weigth'=>40),
			),
		),
	),
);
~~~

Во время работы приложения обратиться к компоненту, отвечающему за кэширование, можно так: `Yii::app()->cache`.

Yii обеспечивает разные кэш-компоненты, кэширующие данные
в различных средах. Например, компонент [CMemCache] инкапсулирует дополнение memcache для PHP
и использует память как среду хранения кэша; компонент
[CApcCache] инкапсулирует дополнение APC для PHP; и компонент
[CDbCache] сохраняет кэшируемые данные в базе данных. Далее приведен список
доступных компонентов кэширования:

   - [CMemCache]: использует [дополнение memcache](http://www.php.net/manual/ru/book.memcache.php) для PHP.

   - [CApcCache]: использует [дополнение APC](http://www.php.net/manual/ru/book.apc.php) для PHP.

   - [CXCache]: использует [дополнение XCache](http://xcache.lighttpd.net/) для PHP.
Примечание: доступно с версии 1.0.1.

   - [CDbCache]: использует таблицы базы данных для хранения кэшируемых данных. По умолчанию
создает и использует базу данных SQLite3 в рабочем каталоге. Мы
можем явно определить базу данных установкой свойства [connectionID|CDbCache::connectionID].

> Tip|Подсказка: Все эти компоненты кэширования наследуются от базового класса
[CCache], поэтому можно переключаться между различными типами кэширования без изменения
кода, использующего кэш.

Кэширование может использоваться на различных уровнях. На низшем уровне мы используем кэширование
для хранения "атомарных" (одиночных) кусков данных, таких как переменные, и зовем их
*кэширование данных*. На следующем уровне, мы храним в кэше фрагменты страницы,
генерируемые частью скрипта представления. И на высшем уровне
мы храним в кэше целую страницу и получаем ее из кэша при необходимости.

В следующих нескольких подразделах мы уточним, как использовать кэширование на этих уровнях.

> Note|Примечание: По определению, кэш - энергозависимая среда. Поэтому нет гарантий
сохранения кэшируемых данных, даже если они не имеют срока истечения.
Поэтому не используйте кэш как постоянное хранилище данных (например, не используйте кэш
для хранения данных сессий).

<div class="revision">$Id: caching.overview.txt 468 2009-01-04 20:57:35Z qiang.xue $</div>