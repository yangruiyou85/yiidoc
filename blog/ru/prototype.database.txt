Установка базы данных
===================

Создав каркас приложения и законченный дизайн базы данных, в этом разделе мы
создадим базу данных блога и установим подключение к ней в каркасе приложения.


Создание базы данных
-----------------

Для создания базы данных используем SQLite. Поскольку поддержка баз данных в
Yii основана на [PDO](http://www.php.net/manual/ru/book.pdo.php), мы можем
легко переключаться между различными СУБД (например, MySQL, PostgreSQL) без
необходимости изменять наш код.

Мы создаем файл базы данных 'blog.db' в директории
'/wwwroot/blog/protected/data'. Заметим, что и каталог и файл базы данных
должны иметь возможность перезаписи процессом Web-сервера как этого требует
SQLite. Мы можем просто скопировать файл базы данных с демонстрационной версией
блога нашей установленной версии Yii, который расположен в директории
'/wwwroot/yii/demos/blog/protected/data/blog.db'. Мы можем также создать базу
данных, выполнив SQL-выражения из файла
'/wwwroot/yii/demos/blog/protected/data/schema.sqlite.sql'.

> Подсказка: Чтобы выполнить SQL-выражения, мы можем использовать инструмент
командной строки 'sqlite3', который может быть найден на
[официальном Web-сайте SQLite](http://www.sqlite.org/download.html).


Установка подключения к базе данных
--------------------------------

Чтобы использовать базу данных блога в созданном каркасе приложения, мы
должны модифицировать [конфигурацию приложения]
(http://www.yiiframework.com/doc/guide/ru/basics.application#application-configuration),
которая находится в PHP-файле '/wwwroot/blog/protected/config/main.php'.
Сценарий возвращает ассоциативный массив, содержащий пары имя параметра -
значение, каждая из которых используется для инициализации свойств
[экземпляра приложения] (http://www.yiiframework.com/doc/guide/ru/basics.application).

Мы конфигурируем свойство `components` приложения, добавляя новую запись 'db'
как показано ниже:

~~~
[php]
return array(
	......
	'components'=>array(
		......
		'db'=>array(
			'class'=>'CDbConnection',
			'connectionString'=>'sqlite:/wwwroot/blog/protected/data/blog.db',
		),
	),
	......
);
~~~

Конфигурация выше говорит, что у нас есть [компонент приложения]
(http://www.yiiframework.com/doc/guide/ru/basics.application#application-component)
`db`, являющийся экземпляром класса [CDbConnection] со свойством
'connectionString', инициализированным как
'sqlite:/wwwroot/blog/protected/data/blog.db'.

С этой конфигурацией мы можем обратиться к объекту БД-подключения, используя
выражение `Yii::app()->db`, в любом месте нашего кода. Заметим, что выражение
`Yii::app()` возвращает экземпляр приложения, который мы создаем во входном
сценарии. Если Вам интересны доступные методы и свойства БД-подключения,
Вы можете обратиться к [описанию его класса|CDbConnection]. Однако, в
большинстве случаев, мы не собираемся использовать БД-подключение
непосредственно. Вместо этого мы будем использовать для обращения к БД так
называемую [ActiveRecord](http://www.yiiframework.com/doc/guide/ru/database.ar).

<div class="revision">$Id: prototype.database.txt 681 2009-02-16 04:57:01Z qiang.xue $</div>